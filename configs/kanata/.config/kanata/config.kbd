;; Home row mods QWERTY example with more complexity.
;; Some of the changes from the basic example:
;; - when a home row mod activates tap, the home row mods are disabled
;;   while continuing to type rapidly
;; - tap-hold-release helps make the hold action more responsive
;; - pressing another key on the same half of the keyboard
;;   as the home row mod will activate an early tap action

(defcfg
  process-unmapped-keys yes
)

(defsrc
  ;; left
       q    w    e    r   t
  caps a    s    d    f   g
       z    x    c    v   b
  ;;
  ;; right
  y    u    i    o    p
  h    j    k    l    ;
  n    m    ,    .    /
  ;;
  ;; extra keys
  lctl lalt lmet   spc   rmet ralt
)

(defvar
  ;; Note: consider using different time values for your different fingers.
  ;; For example, your pinkies might be slower to release keys and index
  ;; fingers faster.
  tap-time 200
  hold-time 150

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

(deflayer base
  ;; left
       q    w    e    r   t
  @cap @a   @s   @d   @f  g
       z    x    c    v   b
  ;;
  ;; right
  y    u    i    o    p
  h    @j   @k   @l   @;
  n    m    ,    .    /
  ;;
  ;; extra keys
  lctl lalt lmet  @spc   @num ralt
)

(deflayer nomods
  ;; left
       _    _    _    _   _
  _    a    s    d    f   _
       _    _    _    _   _
  ;;
  ;; right
  _    _    _    _    _
  _    j    k    l    ;
  _    _    _    _    _
  ;;
  ;; extra keys
  _    _    _     _      _    _
)

(deflayer U_NUM
  ;; left
       [  7    8    9   ]
  _    ;  4    5    6   =
       `  1    2    3   \
  ;;
  ;; right
  _    _    _    _    _
  _    rsft rctl ralt rmet
  bspc ret  _    _    _
  ;;
  ;; extra keys
  _    @mdot    0     -      _    _
)



(deffakekeys
  to-base (layer-switch base)
)

(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )

  a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lctl $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lsft $left-hand-keys)

  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rsft $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) rctl $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) rmet $right-hand-keys)

  cap (tap-hold $tap-time $hold-time esc f18)

  spc (tap-hold $tap-time $hold-time spc (layer-while-held nav))

  num (layer-while-held U_NUM)

  ;; Maybe keys: unorthodox Shift behavior
  mdot (fork . S-9 (rsft))
)



(deflayermap (nav)
  h left
  j down
  k up
  l right
)
