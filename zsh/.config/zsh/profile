ZDIR="${HOME}/.config/zsh"

# correct max limits for open files and processes (done per bash session)
# also ~/Library/LaunchAgents/limit.maxfiles.plist
# https://docs.riak.com/riak/kv/2.1.4/using/performance/open-files-limit/#mac-os-x
ulimit -n 200000
ulimit -u 2048

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

#
# Editor
#
export ALTERNATE_EDITOR=""
export EDITOR="nvim"       # $EDITOR usualy opens in terminal, but no
export VISUAL="nvim"       # $VISUAL opens in GUI mode


#
# Homebrew
#

# Set PATH, MANPATH, etc., for Homebrew, will also set `HOMEBREW_PREFIX`
eval "$(/opt/homebrew/bin/brew shellenv)"
prefix=$(brew --prefix)


# # Use Homebrew openssl (can be bad for certs)
# export OPENSSL_PATH="/usr/local/opt/openssl@3" # $(brew --prefix openssl)
# path=(${OPENSSL_PATH}/bin $path)
# export LIBRARY_PATH="$LIBRARY_PATH:${OPENSSL_PATH}/lib/"
# export RUBY_CONFIGURE_OPTS="--with-openssl-dir=${OPENSSL_PATH}"
#
# # For compilers:
# #export LDFLAGS="-L${HOMEBREW_PREFIX}/opt/libpq/lib"
# #export CPPFLAGS="-I${HOMEBREW_PREFIX}/opt/libpq/include"
# #export CPPFLAGS="-I${HOMEBREW_PREFIX}/opt/openjdk/include"
# export LDFLAGS="-L${OPENSSL_PATH}/lib"
# export CPPFLAGS="-I${OPENSSL_PATH}/include"

# CFLAGS="-I$(xcrun --show-sdk-path)/usr/include"

# xz
# export LDFLAGS="-L${prefix}/opt/xz/lib $LDFLAGS"
# export CPPFLAGS="-I${prefix}/opt/xz/include $CPPFLAGS"
# export PKG_CONFIG_PATH="${prefix}/opt/xz/lib/pkgconfig:$PKG_CONFIG_PATH"
export LDFLAGS="-L${prefix}/opt/gettext/lib $LDFLAGS"


# openssl@1.1
# export LDFLAGS="-L/opt/homebrew/opt/openssl@1.1/lib $LDFLAGS"
# export CPPFLAGS="-I/opt/homebrew/opt/openssl@1.1/include $CPPFLAGS"
# export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl@1.1/lib/pkgconfig:$PKG_CONFIG_PATH"


# ------------


path=(
    ${HOME}/.local/bin
    $path
)


#
# Python
#
source "${HOME}/.rye/env"
eval "$(mise activate zsh)"   # Polyglot runtime manager (asdf rust clone)


#
# git
#
alias gitconfig="${EDITOR} ~/.gitconfig"
alias git_clean='git remote prune origin && currBranch=$(git rev-parse --abbrev-ref HEAD) && git for-each-ref refs/heads/ "--format=%(refname:short)" | grep -v $currBranch | while read branch; do mergeBase=$(git merge-base $currBranch $branch) && [[ $(git cherry $currBranch $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done'


#
# go
#
export GOPATH="$HOME/go"
export GOROOT="$(brew --prefix go)/libexec"
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin


#
# Aliases
#
alias v="nvim"
alias vim="nvim"
alias oldvim="\vim"

alias l="eza -lah"
alias ll="eza -lh"
alias tree="eza --tree"
alias c="bat"
alias cat="bat -p"

alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g ......='../../../../..'

alias tf=terraform
alias tg=terragrunt
alias k=kubectl

# It will automatically copy over the terminfo files and also magically enable shell integration on the remote machine.
alias s="kitten ssh"

alias wanip='dig +short myip.opendns.com @resolver1.opendns.com'

#
# Helpers
#

export DOCKER_USER="$(id -u):$(id -g)"

function pyclean() {
    find . -type f -name "*.py[co]" -delete
    find . -type d -name "__pycache__" -delete
}

listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}



#
# Fron .zshrc
#

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# User configuration

export PATH="/usr/local/sbin:$PATH"


. ${ZDIR}/oh-my-zsh

# vi motions
bindkey -v

# edit command line in nvim
autoload edit-command-line
zle -N edit-command-line
bindkey -M vicmd '^v' edit-command-line

#
# Antigen plugins [that are not specified in .zprofile]
#
source $HOMEBREW_PREFIX/share/antigen/antigen.zsh

antigen bundle zsh-users/zsh-autosuggestions
bindkey '^y' autosuggest-accept

antigen bundle joshskidmore/zsh-fzf-history-search
antigen bundle zsh-users/zsh-syntax-highlighting

# Tell Antigen that you're done.
antigen apply

eval "$(starship init zsh)"  # The minimal, blazing-fast, and infinitely customizable prompt for any shell!

# Use Up&Down keys to search history based on current input
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# Load completions
fpath=(
    ~/.zfunc
    ${HOMEBREW_PREFIX}/share/zsh/site-functions
    "${fpath[@]}"
)
autoload -Uz compinit
compinit

